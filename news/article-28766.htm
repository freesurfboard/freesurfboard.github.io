<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesurfboard.github.io/news/article-28766.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>vue的插槽</title>
        <meta name="description" content="插槽的定义 官方解释：插槽就是vue实现的一套内容分发的API,将元素作为承载分发内容的出口 通俗解释：想要在一个组件标签中，加入一些内容，那就必须要在组件内声明slot元素，否则不会被渲染  一、默" />
        <link rel="icon" href="/assets/website/img/freesurfboard/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Surfboard官方订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freesurfboard.github.io/news/article-28766.htm" />
    <meta property="og:site_name" content="Free Surfboard官方订阅站" />
    <meta property="og:title" content="vue的插槽" />
    <meta property="og:image" content="https://freesurfboard.github.io/uploads/20240726-2/7453fe65d44dcd97a0c14180d57cf748.webp" />
        <meta property="og:release_date" content="2024-12-21T10:09:31" />
    <meta property="og:updated_time" content="2024-12-21T10:09:31" />
        <meta property="og:description" content="插槽的定义 官方解释：插槽就是vue实现的一套内容分发的API,将元素作为承载分发内容的出口 通俗解释：想要在一个组件标签中，加入一些内容，那就必须要在组件内声明slot元素，否则不会被渲染  一、默" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="vue的插槽">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&family=Source+Sans+Pro:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/freesurfboard/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freesurfboard/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freesurfboard/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freesurfboard/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freesurfboard/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Variables CSS Files. Uncomment your preferred color scheme -->
    <link href="/assets/website/css/freesurfboard/variables.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/freesurfboard/main.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-GEDHRZQGGF"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-GEDHRZQGGF');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- ======= Header ======= -->
    <header id="header" class="header fixed-top" data-scrollto-offset="0">
        <div class="container-fluid d-flex align-items-center justify-content-between">
                        <a href="/" class="logo d-flex align-items-center scrollto me-auto me-lg-0">
                Free Surfboard
            </a>
                        <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="#">关于</a></li>
                    <li><a class="nav-link" href="#">联系</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle d-none"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <div class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>vue的插槽</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </div><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container" data-aos="fade-up">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> <a id="_0" rel="nofollow"></a>插槽的定义</h2> <p>官方解释：插槽就是vue实现的一套内容分发的API,将元素作为承载分发内容的出口</p> <p>通俗解释：想要在一个组件标签中，加入一些内容，那就必须要在组件内声明slot元素，否则不会被渲染</p> <h4> <a id="_5" rel="nofollow"></a>一、默认插槽</h4> <p>父组件想要引入组件中显示，</p> <p>我是你爸爸</p> <p>，就必须先在子组件中用slot定义一个插槽，用来接收父组件传递的代码，才能正常的在页面中渲染<br /> <br /> 在父组件中 </p> <pre><code class="prism language-js">  <span class="token operator">&lt;</span>son<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>我是你爸爸<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>son<span class="token operator">&gt;</span> </code></pre> <p>在子组件中</p> <pre><code class="prism language-js"> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>我是儿子<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>slot<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> </code></pre> <p>页面就有添加的内容<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230128/496b1827eec25baa8d8ce864245c58e6.jpg" alt="vue的插槽"></p> <h4> <a id="_22" rel="nofollow"></a>二、具名插槽</h4> <p>定义：就是在slot标签上有一个属性:name,可以将指定的代码放到指定的插槽中<br /> 使用：元素有一个特殊attribute:name.这个是name属性的值就是插槽的名字，父组件中在一个元素上使用v-slot指令，并以v-slot的参数的形式提供其名称，一一对应。</p> <p>子组件</p> <pre><code class="prism language-js"> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>header<span class="token operator">&gt;</span>             <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span><span class="token operator">/</span>header<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>我是儿子<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>slot<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>footer<span class="token operator">&gt;</span>             <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"footer"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span><span class="token operator">/</span>footer<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> </code></pre> <p>父组件</p> <pre><code class="prism language-js"><span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>son<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>template v<span class="token operator">-</span>slot<span class="token operator">:</span>header<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>我是爸爸的头部<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>我是你爸爸<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>template v<span class="token operator">-</span>slot<span class="token operator">:</span>footer<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>我是爸爸的腿部<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span><span class="token operator">/</span>son<span class="token operator">&gt;</span> </code></pre> <p>页面显示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230128/c2cd2df9fabbf6ae6e2278dbce33df8a.jpg" alt="vue的插槽"></p> <h4> <a id="_55" rel="nofollow"></a>三、作用域插槽</h4> <p>作用域插槽主要用于解决的问题是：当父组件向子组件插槽传递模板内容时存在访问子组件数据的问题</p> <p>描述：作用域插槽其实就是带数据的插槽，即带参数的插槽，简单来说就是子组件提供给父组件的参数，该参数仅限于插槽中使用，父组件可根据子组件传过来的插槽数据进行不同的方式展现好热填充插槽内容。</p> <p>子组件中</p> <pre><code class="prism language-js"> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>          <span class="token operator">&lt;</span>slot <span class="token operator">:</span>user<span class="token operator">=</span><span class="token string">"user"</span><span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>   <span class="token punctuation">.</span>   <span class="token punctuation">.</span>   <span class="token punctuation">.</span>   <span class="token punctuation">.</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> <span class="token punctuation">{<!-- --></span>                 <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>                     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Alan'</span><span class="token punctuation">,</span>                     <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> </code></pre> <p>父组件中</p> <pre><code class="prism language-js"><span class="token operator">&lt;</span>template v<span class="token operator">-</span>slot<span class="token operator">:</span><span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"slotProps"</span><span class="token operator">&gt;</span>         <span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>slotProps<span class="token punctuation">.</span>user<span class="token punctuation">}</span><span class="token punctuation">}</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span> </code></pre> <p>作用域插槽绑定了一套数据，父组件可以拿来用，所以样式父组件说了算，但内容可以显示子组件插槽绑定的</p> <h2> <a id="_86" rel="nofollow"></a>区别</h2> <p>单个插槽和具名插槽不绑定数据，所以父组件提供的模板一般要包括样式又包括内容</p> <p>作用域插槽，父组件要提供一套样式</p> <p>总结：</p> <p>子组件中：</p> <pre><code>插槽用 &lt;slot&gt; 标签来确定渲染的位置，里面放如果父组件没传内容时的后备内容 具名插槽用name属性来表示插槽的名字，不传为默认插槽 作用域插槽在作用域上绑定属性来将子组件的信息传给父组件使用，这些属性会被挂在父组件slot-scope接收的对象上 </code></pre> <pre><code class="prism language-js"><span class="token comment">//Child.vue</span> <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>    	<span class="token operator">&lt;</span>main<span class="token operator">&gt;</span>    	<span class="token comment">//默认插槽</span>    		<span class="token operator">&lt;</span>slot<span class="token operator">&gt;</span>    			<span class="token comment">//slot内为后备内容</span>    			<span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>没传内容<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>    		<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>    	<span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">&gt;</span>    	    	<span class="token comment">//具名插槽</span>    	<span class="token operator">&lt;</span>header<span class="token operator">&gt;</span>    		<span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">&gt;</span>    			<span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>没传header插槽<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>    		<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>    	<span class="token operator">&lt;</span><span class="token operator">/</span>header<span class="token operator">&gt;</span>     	<span class="token comment">//作用域插槽</span>    	<span class="token operator">&lt;</span>footer<span class="token operator">&gt;</span>    		<span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"footer"</span> testProps<span class="token operator">=</span><span class="token string">"子组件的值"</span><span class="token operator">&gt;</span>    		 <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>没传footer插槽<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>     		<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>     	<span class="token operator">&lt;</span><span class="token operator">/</span>footer<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span> div<span class="token punctuation">{<!-- --></span>    <span class="token literal-property property">border</span><span class="token operator">:</span>1px solid #<span class="token number">000</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>  </code></pre> <p>父组件在使用时：</p> <pre><code>默认插槽的话直接在子组件的标签内写入内容即可 具名插槽是在默认插槽的基础上加上slot属性，值为子组件插槽name属性值 作用域插槽则是通过slot-scope获取子组件的信息，在内容中使用。这里可以用解构语法去直接获取想要的属性 </code></pre> <pre><code class="prism language-js"><span class="token comment">// Parent.vue</span> <span class="token operator">&lt;</span>child<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 默认插槽 <span class="token operator">--</span><span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>默认插槽<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 具名插槽 <span class="token operator">--</span><span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>div slot<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">&gt;</span>具名插槽header<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 作用域插槽 <span class="token operator">--</span><span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>div slot<span class="token operator">=</span><span class="token string">"footer"</span> slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"slotProps"</span><span class="token operator">&gt;</span>    <span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>slotProps<span class="token punctuation">.</span>testProps<span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>child<span class="token operator">&gt;</span>  </code></pre> <p>v-slot</p> <p>在vue2.6中。上述的API被软废弃（3.0正式废弃），取而代之的是内置指令v-slot，可以缩写为【#】<br /> 子组件用法保持不变，父组件中</p> <pre><code>slot属性弃用，具名插槽通过指令参数v-slot:插槽名的形式传入，可以简化为#插槽名 slot-scope属性弃用，作用域插槽通过v-slot:xxx="slotProps"的slotProps来获取子组件传出的属性 v-slot属性只能在template上使用，但在只有默认插槽时可以在组件标签上使用 </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-28310.htm">可以打动物吗（动物可以打狂犬疫苗吗）</a></p>
                                        <p>下一个：<a href="/news/article-28767.htm">SpringBoot如何整合spring-retry来实现接口请求重试</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-17-node-share.htm" title="11月17日 - 最高速度19.5M/S，2024年Surfboard每天更新免费节点订阅链接，干净IP机场推荐">11月17日 - 最高速度19.5M/S，2024年Surfboard每天更新免费节点订阅链接，干净IP机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-linux-surfboard-node.htm" title="1月17日 - 最高速度20.6M/S，2025年Surfboard每天更新免费节点订阅链接，干净IP机场推荐">1月17日 - 最高速度20.6M/S，2025年Surfboard每天更新免费节点订阅链接，干净IP机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-8-free-high-speed-nodes.htm" title="11月8日 - 最高速度21.1M/S，2024年Surfboard每天更新免费节点订阅链接，干净IP机场推荐">11月8日 - 最高速度21.1M/S，2024年Surfboard每天更新免费节点订阅链接，干净IP机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-25981.htm" title="动物疫苗使用时的注意事项有哪些呢图片（动物疫苗使用时的注意事项有哪些呢图片）">动物疫苗使用时的注意事项有哪些呢图片（动物疫苗使用时的注意事项有哪些呢图片）</a></li>
                        <li class="py-2"><a href="/news/article-31614.htm" title="本地宠物领养机构排名（当地宠物领养基地）">本地宠物领养机构排名（当地宠物领养基地）</a></li>
                        <li class="py-2"><a href="/news/article-26442.htm" title="详解encodeURI和encodeURIComponent的区别">详解encodeURI和encodeURIComponent的区别</a></li>
                        <li class="py-2"><a href="/news/article-47230.htm" title="芭比堂爱心连锁宠物医院（芭比堂宠物医院百度百科）">芭比堂爱心连锁宠物医院（芭比堂宠物医院百度百科）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-9-free-subscribe-node.htm" title="1月9日 - 最高速度18.3M/S，2025年Surfboard每天更新免费节点订阅链接，干净IP机场推荐">1月9日 - 最高速度18.3M/S，2025年Surfboard每天更新免费节点订阅链接，干净IP机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-32559.htm" title="宠物粮食加工厂设备有哪些种类的呢 宠物粮食加工厂设备有哪些种类的呢图片">宠物粮食加工厂设备有哪些种类的呢 宠物粮食加工厂设备有哪些种类的呢图片</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-26-free-surfboard.htm" title="1月26日 - 最高速度22.8M/S，2025年Surfboard每天更新免费节点订阅链接，干净IP机场推荐">1月26日 - 最高速度22.8M/S，2025年Surfboard每天更新免费节点订阅链接，干净IP机场推荐</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">28</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
    <!-- ======= Footer ======= -->
<footer id="footer" class="footer">
    <div class="footer-legal text-center">
        <div class="container d-flex flex-column flex-lg-row justify-content-center justify-content-lg-between align-items-center">
            <div class="d-flex flex-column align-items-center align-items-lg-start">
                <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <a href="/">Free Surfboard官方订阅站</a> 版权所有 Powered by WordPress
                </div>
            </div>
        </div>
    </div>
</footer><!-- End Footer -->
<a href="#" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
<div id="preloader"></div>
<!-- Vendor JS Files -->
<script src="/assets/website/js/frontend/freesurfboard/jquery-3.2.1.min.js"></script>
<script src="/assets/website/js/frontend/freesurfboard/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="/assets/website/js/frontend/freesurfboard/aos/aos.js"></script>
<script src="/assets/website/js/frontend/freesurfboard/glightbox/js/glightbox.min.js"></script>
<script src="/assets/website/js/frontend/freesurfboard/isotope-layout/isotope.pkgd.min.js"></script>
<script src="/assets/website/js/frontend/freesurfboard/swiper/swiper-bundle.min.js"></script>
<script src="/assets/website/js/frontend/freesurfboard/php-email-form/validate.js"></script>
<!-- Template Main JS File -->
<script src="/assets/website/js/frontend/freesurfboard/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>